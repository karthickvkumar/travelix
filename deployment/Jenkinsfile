pipeline {
    agent any

    environment {
        CI = 'false'
        IMAGE_NAME = 'travelix'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:${env.BUILD_ID}")
                }
            }
        }
        stage('Run Docker Container') {
            steps {
                script {
                    try {
                        bat "docker stop travelix"
                        bat "docker rm travelix"
                    } catch (Exception e) {
                        echo 'No existing container to remove.'
                    }

                    docker.image("${IMAGE_NAME}:${env.BUILD_ID}").run('-d --name travelix -p 3000:80')
                }
            }
        }
        // stage('Install Dependencies') {
        //     steps {
        //         nodejs('NodeJS') {
        //             bat 'npm install'
        //         }
        //     }
        // }
        // stage('Run Tests') {
        //     steps {
        //         nodejs('NodeJS') {
        //             bat 'npm test -- --coverage --watchAll=false --passWithNoTests'
        //         }
        //     }
        // }
        // stage('Build') {
        //     steps {
        //         nodejs('NodeJS') {
        //             bat 'npm run build'
        //         }
        //     }
        // }
    }
    post {
        always {
            cleanWs()
            script {
                try {
                    bat "docker stop react_app"
                    bat "docker rm react_app"
                } catch (Exception e) {
                    echo 'No existing container to stop or remove.'
                }
            }
        }
        success {
            echo 'Build and deploy successful.'
        }
        failure {
            echo 'Build or deploy failed.'
        }
    }
}